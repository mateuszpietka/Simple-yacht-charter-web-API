// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YachtCharterWebApp.Infrastructure.Context;

namespace YachtCharterWebApp.Infrastructure.Migrations
{
    [DbContext(typeof(YachtsAppDbContext))]
    partial class YachtsAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("YachtCharterWebApp.Core.Entities.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("YachtId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("YachtId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("YachtCharterWebApp.Core.Entities.Yacht", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<short>("EnginePower")
                        .HasColumnType("smallint");

                    b.Property<bool>("HasEngine")
                        .HasColumnType("bit");

                    b.Property<string>("HomePort")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<short>("MaxPeople")
                        .HasColumnType("smallint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<short>("NumberOfCabins")
                        .HasColumnType("smallint");

                    b.Property<bool>("RequiredPermission")
                        .HasColumnType("bit");

                    b.Property<int>("YachtTypeId")
                        .HasColumnType("int");

                    b.Property<short>("YearProduction")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("YachtTypeId");

                    b.ToTable("Yachts");
                });

            modelBuilder.Entity("YachtCharterWebApp.Core.Entities.YachtType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeDescription")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("YachtTypes");
                });

            modelBuilder.Entity("YachtCharterWebApp.Core.Entities.Reservation", b =>
                {
                    b.HasOne("YachtCharterWebApp.Core.Entities.Yacht", "Yacht")
                        .WithMany()
                        .HasForeignKey("YachtId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Yacht");
                });

            modelBuilder.Entity("YachtCharterWebApp.Core.Entities.Yacht", b =>
                {
                    b.HasOne("YachtCharterWebApp.Core.Entities.YachtType", "YachtType")
                        .WithMany()
                        .HasForeignKey("YachtTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("YachtType");
                });
#pragma warning restore 612, 618
        }
    }
}
